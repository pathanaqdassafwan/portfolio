1.Open a PowerShell terminal in VS Code

2.Make sure you're in the correct directory
cd f:\portfolio

3.Activate your virtual environment
& F:/portfolio/.venv/Scripts/Activate.ps1

You'll see (.venv) appear at the beginning of your
command prompt, indicating the virtual environment is active.

4.Run the Flask application
python app.py

Netlify deployment (automated via GitHub Actions)

1. Create a Netlify site manually once:
	- Go to https://app.netlify.com/sites/new -> "Import an existing project" -> GitHub -> select your repository.
	- During setup, note the "Site ID" from the site settings (Site settings -> Site information).

2. Create a Personal Access Token for Netlify:
	- In Netlify, open User settings -> Applications -> Personal access tokens -> "New access token".
	- Copy the token.

3. Add secrets to your GitHub repository:
	- Go to your GitHub repo -> Settings -> Secrets and variables -> Actions -> New repository secret.
	- Add `NETLIFY_AUTH_TOKEN` with the token value.
	- Add `NETLIFY_SITE_ID` with the Site ID value.

4. Push to `main`: use Netlify's direct GitHub integration (recommended):
	- Go to https://app.netlify.com/sites/new -> "Import an existing project" -> GitHub.
	- Authorize Netlify to access your GitHub account (one-time) and select this repository.
	- For "build command" leave blank; set "publish directory" to `templates` (or whichever folder contains `index.html`).
	- Finish the setup and Netlify will automatically deploy on every push to `main`.

Notes:
- No repository secrets are required with direct GitHub integration.
- If your site requires a build step, set the build command and publish directory accordingly.